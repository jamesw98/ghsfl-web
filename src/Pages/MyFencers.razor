@page "/my-fencers"
@using GhsflUtils.Models
@using GhsflUtils.Services
@using GhsflUtils.Enums

@inject FencerService FencerService
@inject ClubService ClubService

<AuthorizeView>
    <NotAuthorized>
        <NotAuthorizedMessage/>
    </NotAuthorized>
    <Authorized>
        @if (_myFencers != null && _clubs != null)
        {
            <MudContainer MaxWidth="MaxWidth.Large">
                <MudPaper Class="pa-4">
                    <MudText Typo="Typo.h5">Men</MudText>
                    <FencerTable
                        Fencers="_myFencers.Where(f => f.Gender == Genders.Male)"
                        AllClubs="_clubs"
                        IncludeClub="false"
                        IncludePlace="false"/>
                    <br/>
                    <MudText Typo="Typo.h5">Women</MudText>
                    <FencerTable
                        Fencers="_myFencers.Where(f => f.Gender == Genders.Female)"
                        AllClubs="_clubs"
                        IncludeClub="false"
                        IncludePlace="false"/>
                </MudPaper>
            </MudContainer>
        }
        else
        {
            <MudContainer MaxWidth="MaxWidth.Large">
                <MudPaper Class="pa-4">
                    <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
                </MudPaper>
            </MudContainer>
        }
    </Authorized>
</AuthorizeView>

@code {

    private List<Fencer>? _myFencers;
    private List<Club>? _clubs;

    protected override async Task OnInitializedAsync()
    {
        _myFencers = await FencerService.GetFencersForUser();
        _clubs = await ClubService.GetAllClubs();
    }

}